generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

enum PaymentStatus {
  PENDING
  PAID
  CANCELLED
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String?
  name      String
  email     String   @unique
  password  String
  gender    Gender?
  birthDate DateTime?
  phone     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  cartItems CartItem[]
  reviews   Review[]
  payments  Payment[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  image       String?
  name        String
  description String
  volume      String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt DateTime   @updatedAt

  cartItems   CartItem[]
  reviews     Review[]
  payments    PaymentProduct[]
}

model CartItem {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @db.ObjectId
  productId  String    @db.ObjectId
  quantity   Int
  createdAt  DateTime  @default(now())
  updatedAt DateTime   @updatedAt

  user       User      @relation(fields: [userId], references: [id])
  product    Product   @relation(fields: [productId], references: [id])
}

model Review {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @db.ObjectId
  productId String     @db.ObjectId
  comment   String
  rating    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user      User       @relation(fields: [userId], references: [id])
  product   Product    @relation(fields: [productId], references: [id])
}

model Payment {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  userId        String         @db.ObjectId
  totalAmount   Float
  status        PaymentStatus  @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  user          User           @relation(fields: [userId], references: [id])
  products      PaymentProduct[]
}

model PaymentProduct {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  paymentId  String    @db.ObjectId
  productId  String    @db.ObjectId
  quantity   Int

  payment    Payment  @relation(fields: [paymentId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}